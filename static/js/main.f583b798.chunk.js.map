{"version":3,"sources":["components/Input/styles.js","components/Input/index.js","components/MessageWrapper/styles.js","components/MessageWrapper/index.js","pages/Main/styles.js","components/Send/styles.js","components/Send/index.js","pages/Main/index.js","styles/GlobalStyles.js","App.js","index.js"],"names":["Container","styled","div","StyledInput","input","invalid","css","Button","button","Input","onSend","onlyText","props","value","type","onClick","show","sended","ChatBotIcon","Message","children","chatbot","text","StyledButton","Send","Main","useState","name","dateBirth","city","email","rating","user","setUser","valid","setValid","setInvalid","sendEmail","test","String","toLowerCase","useEffect","window","scrollTo","innerHeight","placeholder","onChange","e","target","match","Date","toDateString","count","size","activeColor","axios","post","then","status","toast","success","catch","error","createGlobalStyle","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f583b798.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n  display:flex;\n  justify-content:center;\n  align-items:center;\n`;\n\nexport const StyledInput = styled.input`\n    height:50px;\n    width:200px;\n    padding:5px;\n\n    outline:none;\n    border:1px solid rgb(0,0,0,0.6);\n    border-radius:5px;\n\n    color:rgb(0,0,0,0.6);\n\n    :focus{\n        border:1px solid rgb(0,0,0,0.8);\n        color:rgb(0,0,0,0.8);\n    }\n\n    ${({invalid})=>invalid &&\n        css`\n            border:1px solid rgb(255,0,0,0.6);;\n            color:rgb(255,0,0,0.6);\n\n            :focus{\n                border:1px solid rgb(255,0,0,0.8);\n                color:rgb(255,0,0,0.8);\n            }\n        `\n    }\n`;\n\n\nexport const Button = styled.button`\n    height:50px;\n    width:50px;\n\n    display:flex;\n    justify-content:center;\n    align-items:center;\n\n    font-size:25px;\n    margin-left:5px;\n    border-radius:50%;\n\n    cursor: pointer;\n\n    :hover{\n        background-color:rgba(0,0,0,0.1)\n    }\n`\n","import React from 'react';\nimport { MdSend } from 'react-icons/md';\n\nimport { Container, StyledInput, Button } from './styles';\n\nfunction Input({onSend=()=>false,onlyText=false, ...props}) {\n  return <Container>\n      {!onlyText ?\n        <>\n            <StyledInput {...props} />\n            <Button type=\"button\" onClick={()=>onSend()}><MdSend/></Button>\n        </>\n        :\n        <>\n            {props.value}\n        </>\n      }\n    </Container>;\n}\n\nexport default Input;","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n    display:flex;\n    flex-direction:row;\n    align-items:center;\n    gap:15px;\n\n    width:fit-content;\n    max-width:calc(100%-20px);\n    padding:15px 20px;\n    margin:20px;\n\n    border-radius:10px;\n    border:1px solid rgba(0,0,0,0.3);\n    \n    font-size:14px;\n\n    @media (min-width:400px){\n        max-width:calc(400px);\n    }\n\n\n    ${({show})=>show ? \n        css`\n            transition: opacity 0.8s;\n            opacity: 1;\n        `\n        :\n        css`\n            width:0;\n            height:0;\n            opacity: 0;\n            position:absolute;\n            pointer-events:none;\n        `\n\n    }\n\n    ${({sended})=>sended ? \n        css`\n            margin-left:auto;\n            background-color: var(--sended-message);\n        `\n        :\n        css`\n            background-color: var(--incoming-message);\n        `\n\n    }\n\n    box-shadow: 5px 5px 15px -4px rgba(0,0,0,0.42);\n`;\n\n\nexport const ChatBotIcon = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n\n\n\n    font-size:25px;\n    width:50px;\n    height:50px;\n    padding:10px;\n\n    border-radius:100%;\n\n    background-color:rgba(0,0,0,0.6);\n    color:white;\n`","import React from 'react';\n\nimport { Container, ChatBotIcon } from './styles';\nimport {FaRobot} from 'react-icons/fa';\n\nfunction Message({children, chatbot, text,  sended, show=true}) {\n  return <Container sended={sended} show={show}>\n    {\n      chatbot &&\n      <ChatBotIcon >\n          <FaRobot />\n      </ChatBotIcon>\n    }\n    {\n      text ? \n      <p>\n        {children}\n      </p>\n      :\n      <>\n        {children}\n      </>\n    }\n    \n  </Container>;\n}\n\nexport default Message;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display:flex;\n    flex-direction:column;\n\n    width:100%;\n    min-height:100vh;\n    height:fit-content;\n    max-width:1000px;\n\n    background-color:var(--background-messages);\n`;\n","import styled, { css } from 'styled-components';\n\nexport const StyledButton = styled.div`\n    width:calc(100% - 50px);\n\n    display:flex;\n    justify-content:center;\n    align-items:center;\n\n    background-color: #075e54;\n    color:white;\n\n    margin:20px auto;\n    padding:20px 0;\n\n    border:1px solid white;\n    border-radius:5px;\n\n    :hover{\n        cursor:pointer;\n        opacity:0.8;\n    }\n\n\n    ${({show})=>show ? \n        css`\n            transition: opacity 0.8s;\n            opacity: 1;\n        `\n        :\n        css`\n            width:0;\n            height:0;\n            opacity: 0;\n            position:absolute;\n            pointer-events:none;\n        `\n\n    }\n\n    > svg {\n        margin-left:10px;\n    }\n`;\n","import React from 'react';\nimport { MdSend } from 'react-icons/md';\n\nimport { StyledButton } from './styles';\n\nfunction Send({children, ...props}) {\n  return <StyledButton {...props} >{children}<MdSend /></StyledButton>;\n}\n\nexport default Send;","import React, { useEffect, useState } from 'react';\nimport Input from '../../components/Input';\nimport Message from '../../components/MessageWrapper';\nimport ReactStars from \"react-rating-stars-component\";\n\nimport { Container } from './styles';\nimport Send from '../../components/Send';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nfunction Main() {\n\n    const [user, setUser] = useState({\n        name:'',\n        dateBirth:'',\n        city:'',\n        email:'',\n        rating:0,\n    });\n\n    const [valid, setValid] = useState({\n        name:false,\n        dateBirth:false,\n        city:false,\n        email:false,\n    });\n\n    const [invalid, setInvalid] = useState({\n        name:false,\n        dateBirth:false,\n        city:false,\n        email:false,\n    });\n\n    useEffect(()=>{\n        window.scrollTo(0, window.innerHeight);\n    },[valid]);\n\n    function sendName(){\n        if(user.name.match(/^[a-z0-9]+$/i)!=null &&  user.name){\n            setValid({...valid,name:true});\n            setInvalid({...invalid,name:false});\n            window.scrollTo(0, window.innerHeight);\n        }else{\n            setValid({...valid,name:false});\n            setInvalid({...invalid,name:true});\n        }\n        window.scrollTo(0, window.innerHeight);\n    }\n\n    function sendBirthDate(){\n        if(user.dateBirth && new Date(user.dateBirth).toDateString() <= new Date().toDateString()){\n            setValid({...valid,dateBirth:true});\n            setInvalid({...invalid,dateBirth:false});\n            window.scrollTo(0, window.innerHeight);\n        }else{\n            setValid({...valid,dateBirth:false});\n            setInvalid({...invalid,dateBirth:true});\n        }\n    }\n\n    function sendCity(){\n        if(user.city){\n            setValid({...valid,city:true});\n            setInvalid({...invalid,city:false});\n            window.scrollTo(0, window.innerHeight);\n        }else{\n            setValid({...valid,city:false});\n            setInvalid({...invalid,city:true});\n        }\n    }\n\n    function validateEmail(email) {\n        const re =  /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}.[a-zA-Z]{2,3}$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    function sendEmail(){\n        if(validateEmail(user.email)){\n            setValid({...valid,email:true});\n            setInvalid({...invalid,email:false});\n        }else{\n            setValid({...valid,email:false});\n            setInvalid({...invalid,email:true});\n        }\n    }\n    \n    function submitData(){\n        axios.post('https://60638cb96bc4d60017fab448.mockapi.io/api/chat/user',{\n            'aa':'aa'\n        },{})\n        .then(({status})=>{\n            if(status==201){\n                toast.success(\"Avaliação enviada!\");\n            }\n        })\n        .catch((e)=>{\n            toast.error(\"Erro ao enviar avaliação!\");\n        })\n    }\n\n    return <Container>\n        <Message chatbot >Olá eu sou o ChatNilson tudo bem? Para começarmos, preciso saber seu nome.</Message>\n        <Message sended >\n            <Input \n                placeholder=\"Nome e Sobrenome\"\n                value={user.name}\n                invalid={invalid.name}\n                onlyText={valid.name}\n                onChange={(e)=>setUser({...user,name:e.target.value})}\n                onSend={()=>sendName()}\n            />\n        </Message>\n\n        <Message chatbot  show={valid.name}>Que satisfação,{user.name}. Agora que sei o seu nome, qual cidade e estado voce mora?</Message>\n        <Message sended show={valid.name}>\n            <Input \n                type=\"date\"\n                placeholder=\"Data de Nascimento\" \n                value={user.dateBirth}\n                invalid={invalid.dateBirth}\n                onlyText={valid.dateBirth}\n                onChange={(e)=>setUser({...user,dateBirth:e.target.value})}\n                onSend={()=>sendBirthDate()}\n            />\n        </Message>\n\n        <Message chatbot  show={valid.dateBirth}>Legal, agora que sabemos sua cidade e seu estado. Quando foi que você nasceu?</Message>\n        <Message sended show={valid.dateBirth}>\n            <Input\n                type=\"text\"\n                placeholder=\"Cidade\" \n                value={user.city}\n                invalid={invalid.city}\n                onlyText={valid.city}\n                onChange={(e)=>setUser({...user,city:e.target.value})}\n                onSend={()=>sendCity()}\n            />\n        </Message>\n        <Message chatbot  show={valid.city}>Agora, me fala teu email por gentileza?</Message>\n        <Message sended show={valid.city}>\n            <Input \n                type=\"text\"\n                placeholder=\"Email\"\n                value={user.email}\n                invalid={invalid.email}\n                onlyText={valid.email}\n                onChange={(e)=>setUser({...user,email:e.target.value})}\n                onSend={()=>sendEmail()}\n            />\n        </Message>\n        <Message chatbot  show={valid.email}>Você finalizou o teste Faça uma avaliação sobre o processo que realizou até o momento. Nós agradecemos!</Message>\n        <Message sended show={valid.email}>\n            <ReactStars\n                count={5}\n                onChange={(value)=>setUser({...user,rating:value})}\n                size={50}\n                activeColor=\"#ffd700\"\n            />\n        </Message>\n        \n        <Send show={valid.email} onClick={submitData} >Enviar</Send>\n    </Container>;\n}\n\nexport default Main;","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n\n\n    @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');\n    \n    * {\n        margin:0;\n        padding:0;\n        box-sizing:border-box;\n        font-family: Roboto, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\n    }\n\n    html, body, #root{\n        max-height:100vh;\n        max-width:100vw;\n        width:100%;\n        height:100%auto;\n        display:flex;\n        justify-content:center;\n    }\n\n    *, button, input{\n        border:0;\n        background:none;\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n\n    html{\n        background:var(--background);\n    }\n\n    :root{\n        --background:#f0f0f0;\n        --background-messages:#E5DDD5;\n        --incoming-message:#fff;\n        --sended-message:#DCF8C6;\n    }\n`","import { ToastContainer } from 'react-toastify';\nimport Main from './pages/Main';\nimport GlobalStyles from './styles/GlobalStyles';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return <>\n    <Main />\n    <ToastContainer />\n    <GlobalStyles />\n  </>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}